name: Build and push image📦

on:
  workflow_dispatch:
  # schedule:
  #  - cron: "00 17 * * SAT"
  push:
    branches: ["http3"]
  # pull_request:
  #  branches: ["http3"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.actor == 'ammnt'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository🧱
        uses: actions/checkout@v4.1.2

      - name: Install cosign🔒
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0

      - name: Setup Docker buildx🛠️
        uses: docker/setup-buildx-action@v3.3.0

      - name: Log into ${{ env.REGISTRY }}🔑
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub🔑
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata🔬
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build the Docker image⛓️
        id: build
        uses: docker/build-push-action@v5.3.0
        with:
          provenance: false
          context: .
          platforms: linux/amd64
          load: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Slim the Docker image🚀
        uses: kitabisa/docker-slim-action@v1.1.1
        env:
          DSLIM_HTTP_PROBE: false
        with:
          target: ghcr.io/ammnt/freenginx:http3
          tag: ghcr.io/ammnt/freenginx:http3
          overwrite: true
      - run: echo "${REPORT}"
        env:
          REPORT: ${{ steps.slim.outputs.report }}

      - name: Test the Docker image🧪
        run: |
          docker run -d --rm -p 127.0.0.1:8080:8080/tcp ghcr.io/ammnt/freenginx:http3
          curl -v http://127.0.0.1:8080 || exit 1

      - name: Analyze for critical and high CVEs💊
        id: docker-scout-cves
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/scout-action@v1.7.0
        with:
          command: cves,sbom
          image: ghcr.io/ammnt/freenginx:http3
          sarif-file: sarif.output.json
          summary: true

      - name: Upload SARIF result📊
        id: upload-sarif
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.json

      - name: Push the Docker images to registries💾
        run: |
          docker push ghcr.io/ammnt/freenginx:http3
          docker tag ghcr.io/ammnt/freenginx:http3 ammnt/freenginx:http3
          docker push ammnt/freenginx:http3

      - name: Sign the published Docker image🔐
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
          cosign sign docker.io/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
