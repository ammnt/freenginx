name: Build and push imageüì¶

on:
  workflow_dispatch:
  schedule:
    - cron: "00 12 1 * *"
  push:
    branches: ["main"]
  # pull_request:
  #  branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.actor == 'ammnt'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write
      attestations: write

    steps:
      - name: Checkout repositoryüß±
        uses: actions/checkout@v4.1.5

      - name: Install cosignüîí
        uses: sigstore/cosign-installer@v3.5.0

      - name: Setup Docker buildxüõ†Ô∏è
        uses: docker/setup-buildx-action@v3.3.0

      - name: Log into ${{ env.REGISTRY }}üîë
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hubüîë
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadataüî¨
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build the Docker image‚õìÔ∏è
        id: build
        uses: docker/build-push-action@v5.3.0
        with:
          provenance: false
          context: .
          platforms: linux/amd64
          load: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Slim the Docker imageüöÄ
        uses: kitabisa/docker-slim-action@v1.1.1
        env:
          DSLIM_HTTP_PROBE: false
        with:
          target: ghcr.io/ammnt/freenginx:main
          tag: ghcr.io/ammnt/freenginx:main
          overwrite: true

      - name: Test the Docker imageüß™
        run: |
          docker run -d --rm -p 127.0.0.1:8080:8080/tcp ghcr.io/ammnt/freenginx:main
          curl -v http://127.0.0.1:8080 || exit 1

      - name: Analyze for critical and high CVEsüíä
        uses: docker/scout-action@v1.9.3
        with:
          command: cves,sbom
          image: ghcr.io/ammnt/freenginx:main
          sarif-file: sarif.output.json
          summary: true

      - name: Upload SARIF resultüìä
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.json

      - name: Run Trivy vulnerability scannerüíä
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: ghcr.io/ammnt/freenginx:main
          scan-type: image
          format: "github"
          output: "dependency-results.sbom.json"
          severity: "MEDIUM,HIGH,CRITICAL"
          scanners: "vuln"

      - name: Upload Trivy report as a Github artifactüìä
        uses: actions/upload-artifact@v4.3.3
        with:
          name: trivy-sbom-report
          path: "${{ github.workspace }}/dependency-results.sbom.json"
          retention-days: 20

      - name: Scan image with Anchore scannerüîç
        uses: anchore/scan-action@v3.6.4
        with:
          image: ghcr.io/ammnt/freenginx:main
          fail-build: true

      - name: Scan the image and upload dependency resultsüîç
        uses: anchore/sbom-action@v0.15.11
        with:
          syft-version: v1.5.0
          image: ghcr.io/ammnt/freenginx:main
          artifact-name: image.spdx.json
          dependency-snapshot: false

      - name: Run Snyk to check Docker image for vulnerabilitiesüîç
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ghcr.io/ammnt/freenginx:main
          args: --file=Dockerfile

      - name: Upload Snyk result to GitHub Code Scanningüìä
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Push the Docker images to registriesüíæ
        run: |
          docker push ghcr.io/ammnt/freenginx:main
          docker tag ghcr.io/ammnt/freenginx:main ammnt/freenginx:main
          DIGEST=$(docker images --no-trunc --quiet ghcr.io/ammnt/freenginx:main)
          docker push ammnt/freenginx:main
          echo "DIGEST=$DIGEST" >> $GITHUB_ENV

      - name: Attestation the Docker imageüìç
        uses: actions/attest-build-provenance@v1.1.2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ env.DIGEST }}
          push-to-registry: false

      - name: Sign the published Docker imageüîê
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ env.DIGEST }}
          cosign sign docker.io/${{ env.IMAGE_NAME }}@${{ env.DIGEST }}
